//
// %%INTRO%%
//
// Copyright (C) %%COPYRIGHT%%
//
// %%LICENSE%%
//
//----------------------------------------------------------------------
/*!\file    %%FILE%%
 *
 * \author  %%AUTHOR%%
 *
 * \date    %%DATE%%
 *
 */
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// External includes (system with <>, local with "")
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Internal includes with ""
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Debugging
//----------------------------------------------------------------------
#include <cassert>

//----------------------------------------------------------------------
// Namespace usage
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Namespace declaration
//----------------------------------------------------------------------
%%OPEN_NAMESPACE%%

//----------------------------------------------------------------------
// Forward declarations / typedefs / enums
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// Const values
//----------------------------------------------------------------------
template <>
core::tStandardCreateModuleAction<m%%NAME%%<>> m%%NAME%%<>::cCREATE_ACTION("%%NAME%%<>");

//----------------------------------------------------------------------
// Implementation
//----------------------------------------------------------------------

//----------------------------------------------------------------------
// m%%NAME%% constructor
//----------------------------------------------------------------------
template <>
m%%NAME%%<>::m%%NAME%%(core::tFrameworkElement *parent, const util::tString &name)
  : tSenseControlModule(parent, name),
    some_value( Values should be initialized here )
{}

//----------------------------------------------------------------------
// m%%NAME%% destructor
//----------------------------------------------------------------------
template <>
m%%NAME%%<>::~m%%NAME%%()
{}

//----------------------------------------------------------------------
// m%%NAME%% ParametersChanged
//----------------------------------------------------------------------
template <>
void m%%NAME%%<>::ParametersChanged()
{
  if (this->parameter.HasChanged())
  {
    do something
  }
}

//----------------------------------------------------------------------
// m%%NAME%% Control
//----------------------------------------------------------------------
template <>
void m%%NAME%%<>::Control()
{
  this->some_value = 2 * this->some_value;
}

//----------------------------------------------------------------------
// m%%NAME%% Sense
//----------------------------------------------------------------------
template <>
void m%%NAME%%<>::Sense()
{
  this->some_value = 2 * this->some_value;
}

//----------------------------------------------------------------------
// m%%NAME%% EvaluateStaticParameters
//----------------------------------------------------------------------
template <>
void m%%NAME%%<>::EvaluateStaticParameters()
{
  if (this->static_parameter.HasChanged())
  {
    do something
  }
}

//----------------------------------------------------------------------
// End of namespace declaration
//----------------------------------------------------------------------
%%CLOSE_NAMESPACE%%

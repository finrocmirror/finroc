#!/usr/bin/perl -w

# You received this file as part of Finroc
# A framework for intelligent robot control
# 
# Copyright (C) Finroc GbR (finroc.org)
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
# 
#----------------------------------------------------------------------
# \file    finroc_update_hg_hooks
#
# \author  Tobias Foehst
#
# \date    2010-05-05
#
#----------------------------------------------------------------------

use strict;

use Env '$FINROC_HOME';
use Data::Dumper;

use lib "$FINROC_HOME/scripts/perl";
use FINROC::messages;
use FINROC::getopt;


############################
##  Command line options  ##
############################

ParseCommandLine undef, undef;



###########################
##  Find hg directories  ##
###########################

my @hg_directories = split "\n", `find "$FINROC_HOME" -name ".hg"`;

DEBUGMSG Dumper \@hg_directories;



#########################
##  Update hgrc files  ##
#########################

foreach my $hg_directory (@hg_directories)
{
    my $hgrc = "$hg_directory/hgrc";

    my $content = "";
    my %hooks;
    open HGRC, "<$hgrc" and eval {
        my $in_section_hooks = 0;
        while (<HGRC>)
        {
            $in_section_hooks = 0 if /^\s*\[(.+)\]/;
            $in_section_hooks = 1 if /^\s*\[hooks\]/;
            chomp;
            if ($in_section_hooks)
            {
                if (/=/)
                {
                    my ($name, $value) = map { s/^\s*//; s/\s*$//; $_ } split "=";
                    $hooks{$name} = $value;
                }
            }
            else
            {
                $content .= "$_\n";
            }
        }
        close HGRC;
        1;
    };

    $hooks{"precommit.finroc_code_formatter"} = sprintf "\"%s/scripts/hooks/hg/precommit.finroc_code_formatter\" %s", $FINROC_HOME, $FINROC_HOME;
    $hooks{"precommit.license"} = sprintf "\"%s/scripts/hooks/hg/precommit.license\"", $FINROC_HOME;
    $hooks{"precommit.branches"} = sprintf "\"%s/scripts/hooks/hg/precommit.branches\"", $FINROC_HOME;
    $hooks{"pretxncommit.author"} = sprintf "\"%s/scripts/hooks/hg/pretxncommit.author\"", $FINROC_HOME;

    DEBUGMSG $content;
    DEBUGMSG Dumper \%hooks;

    open HGRC, ">$hgrc" or ERRORMSG "Could not open '$hgrc' for writing!";
    DEBUGMSG "Writing $hgrc ... ";
    printf HGRC "$content";
    printf HGRC "[hooks]\n";
    foreach my $name (keys %hooks)
    {
        printf HGRC sprintf "%s = %s\n", $name, $hooks{$name};
    }
    DEBUGMSG "Done.\n";
    close HGRC;
}



exit 0;

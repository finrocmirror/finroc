#!/usr/bin/perl -w

# You received this file as part of Finroc
# A framework for intelligent robot control
#
# Copyright (C) Finroc GbR (finroc.org)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#----------------------------------------------------------------------
# \file    pretxncommit.merges
#
# \author  Tobias Foehst
#
# \date    2013-10-29
#
# This hook denies back-merges from newer into older branches.
#----------------------------------------------------------------------

use strict;

use Env 'HG_NODE';
use Env 'HG_PARENT1';
use Env 'HG_PARENT2';

exit 0 unless $HG_PARENT2; # not a merge node

my $parent_branch = `hg log --template {branch} -r $HG_PARENT1`;
my $other_branch = `hg log --template {branch} -r $HG_PARENT2`;
exit 0 if $parent_branch =~ /^\Q$other_branch\E(\/.+)?$/;

my ($parent_global, $parent_local) = $parent_branch =~ /^([^\/]+)(.+)?/;
my ($other_global, $other_local) = $other_branch =~ /^([^\/]+)(.+)?/;

if ($parent_global eq "default" || ($other_global ne "default" && $parent_global > $other_global))
{
    exit 0 unless $parent_local || $other_local;
    exit 0 if $parent_local && $other_local && $parent_local eq $other_local;
}

print STDERR "\n";
print STDERR "Illegal back-merge from $other_branch into $parent_branch.\n";
print STDERR "\n";

exit 1;
